{"version":3,"file":"static/js/193.e7cd1d0e.chunk.js","mappings":"+QAEaA,EAAUC,EAAAA,GAAAA,GAAH,2RAgBPC,EAASD,EAAAA,GAAAA,OAAH,6RAgBNE,EAAcF,EAAAA,GAAAA,KAAH,mEAKXG,EAAYH,EAAAA,GAAAA,GAAH,mK,mBC5BTI,EAAkB,WAC7B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAE1BC,EAAmBL,EAASM,QAAO,SAAAC,GAAO,OAC9CA,EAAQC,KAAKC,oBAAoBC,SAASP,EADI,IAIhD,OAAwB,IAApBH,EAASW,QACJ,SAACf,EAAD,oCAGFS,EAAiBO,KAAI,SAAAL,GAC1B,OACE,UAACf,EAAD,YACE,SAAC,MAAD,CAAeqB,KAAM,MACrB,UAAClB,EAAD,WACGY,EAAQC,KADX,KACmBD,EAAQO,WAE3B,SAACpB,EAAD,CACEqB,KAAK,SACLC,QAAS,kBAAMlB,GAASmB,EAAAA,EAAAA,IAAcV,EAAQW,IAArC,EAFX,sBALYX,EAAQW,GAazB,GACF,ECtCYC,EAAO1B,EAAAA,GAAAA,GAAH,mFCOJ2B,EAAc,WACzB,IAAMtB,GAAWC,EAAAA,EAAAA,MACXsB,GAAYpB,EAAAA,EAAAA,IAAYqB,EAAAA,IAK9B,OAJAC,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,MACV,GAAE,CAAC1B,IAEGuB,GACL,SAACI,EAAA,EAAD,KAEA,SAACN,EAAD,WACE,SAACtB,EAAD,KAGL,ECrBY6B,EAAYjC,EAAAA,GAAAA,IAAH,gDAITkC,EAAQlC,EAAAA,GAAAA,MAAH,yLAYLmC,EAAQnC,EAAAA,GAAAA,MAAH,+PAcLoC,EAAOpC,EAAAA,GAAAA,IAAH,8F,oBC1BJqC,EAAS,WACpB,IAAMhC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAAC2B,EAAD,WACE,UAACC,EAAD,2BAEE,SAAC,cAAD,CAAsBI,MAAO,CAAC,EAA9B,UACE,SAACF,EAAD,WACE,SAAC,MAAD,SAGJ,SAACD,EAAD,CAAOI,SAfI,SAAAC,GACf,IAAMC,EAAeD,EAAIE,OAAOJ,MAAMtB,oBAEtCX,GAASsC,EAAAA,EAAAA,GAAeF,GACzB,EAWgCnB,KAAK,OAAOP,KAAK,eAInD,ECzBc,SAAS6B,IACtB,OACE,iCACE,SAACP,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  color: #000000cb;\n  font-size: 18px;\n  font-weight: 500;\n\n  padding: 8px;\n  width: 340px;\n  border: 1px solid black;\n  border-radius: 10px;\n  background-color: #ff9d79;\n`;\n\nexport const Button = styled.button`\n  border: 2px solid transparent;\n  border-radius: 8px;\n  font-weight: 500;\n  font-size: 14px;\n\n  background-color: #b9e5f8;\n  color: black;\n  padding: 6px;\n  transition: background-color 200ms linear;\n\n  :hover {\n    background-color: #88cfed;\n  }\n`;\n\nexport const ContactName = styled.span`\n  width: 220px;\n  word-wrap: break-word;\n`;\n\nexport const SubHeader = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n  font-family: 'Courier New', Courier, monospace;\n  line-height: normal;\n  color: coral;\n`;\n","import {\n  Contact,\n  Button,\n  ContactName,\n  SubHeader,\n} from './ContactListItem.styled';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { getContacts, selectFilter } from 'redux/selectors';\n\nexport const ContactListItem = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(filterValue)\n  );\n\n  if (contacts.length === 0) {\n    return <SubHeader>You have no contacts!</SubHeader>;\n  }\n\n  return filteredContacts.map(contact => {\n    return (\n      <Contact key={contact.id}>\n        <AiOutlineUser size={20} />\n        <ContactName>\n          {contact.name}: {contact.number}\n        </ContactName>\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contact.id))}\n        >\n          Delete\n        </Button>\n      </Contact>\n    );\n  });\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/selectors';\n\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <List>\n      <ContactListItem />\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 4px;\n  width: 220px;\n\n  font-weight: 600;\n  color: coral;\n`;\n\nexport const Input = styled.input`\n  font-family: 'Courier New', Courier, monospace;\n  padding: 8px;\n\n  border: 1px solid black;\n  border-radius: 8px;\n  transition: background-color 200ms linear;\n\n  :hover,\n  :focus {\n    background-color: #87cfdf47;\n  }\n`;\n\nexport const Icon = styled.div`\n  position: absolute;\n  right: 50%;\n  top: 3px;\n  color: #000000;\n`;\n","import { Label, Input, Container, Icon } from './Filter.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport { useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    const filteredName = evt.target.value.toLocaleLowerCase();\n\n    dispatch(setFilterValue(filteredName));\n  };\n\n  return (\n    <Container>\n      <Label>\n        Find contact\n        <IconContext.Provider value={{}}>\n          <Icon>\n            <AiOutlineSearch />\n          </Icon>\n        </IconContext.Provider>\n        <Input onChange={onChange} type=\"text\" name=\"filter\" />\n      </Label>\n    </Container>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Contact","styled","Button","ContactName","SubHeader","ContactListItem","dispatch","useDispatch","contacts","useSelector","getContacts","filterValue","selectFilter","filteredContacts","filter","contact","name","toLocaleLowerCase","includes","length","map","size","number","type","onClick","deleteContact","id","List","ContactList","isLoading","getIsLoading","useEffect","fetchContacts","Loader","Container","Label","Input","Icon","Filter","value","onChange","evt","filteredName","target","setFilterValue","Contacts"],"sourceRoot":""}